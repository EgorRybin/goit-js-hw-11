{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAYJ,SAASC,cAAc,wBAErCI,GADWL,SAASC,cAAc,UAC1B,KACRK,EAAO,IACPC,EAAS,EAEbR,EAAKS,iBAAiB,UACtB,SAAuBC,GAMrB,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUS,MAAAR,IAEpBM,EAAO,CAAEP,WAAUS,MAAAR,MAEpBA,MAdPH,EAAIY,iBACJhB,EAAQiB,OAAOpB,EAAWqB,OAC1BjB,EAAOgB,OAAOnB,EAAUoB,OACxBhB,EAASH,EAAUmB,MAgBnB,IAAK,IAAIC,EAAI,EAAGA,GAAKjB,EAAQiB,GAAK,EAChCd,EAAcc,EAAGnB,GACdoB,MAAK,SAAAC,G,IAAGf,EAAQe,EAARf,SAAUgB,EAAKD,EAALN,MACjBQ,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANJ,EAAM,UAGjDK,OAAM,SAAAN,G,IAAGf,EAAQe,EAARf,SAAUsB,EAAKP,EAALN,MAClBQ,EAAA/B,GAASgC,OAAOK,QACd,sBAAqCH,OAAfpB,EAAS,QAAYoB,OAANE,EAAM,UAGjD5B,GAASC,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst amountRef = document.querySelector('input[name=\"amount\"]');\nconst button = document.querySelector('button');\nlet delay = 1000;\nlet step = 1000;\nlet amount = 5;\n\nform.addEventListener('submit', onButtonClick);\nfunction onButtonClick(evt) {\n  evt.preventDefault();\n  delay = Number(firstDelay.value);\n  step = Number(delayStep.value);\n  amount = amountRef.value;\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n    return promise;\n  }\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amountRef","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","addEventListener","evt","createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","preventDefault","Number","value","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.3177e50a.js.map"}